# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('mipv6', ['core','internet','network', 'csma', 'point-to-point', 'applications', 'wifi', 'wimax', 'internet-apps'])
    module.source = [
        'model/mipv6-option-header.cc',
        'model/mipv6-header.cc',
        'model/mipv6-demux.cc',
        'model/mipv6-option-demux.cc',
        'model/mipv6-mobility.cc',
        'model/mipv6-option.cc',
        'model/mipv6-agent.cc',
        'model/mipv6-l4-protocol.cc',
        'model/tunnel-net-device.cc',
        'model/mipv6-tun-l4-protocol.cc',
        'model/blist.cc',
        'model/mipv6-mn.cc',
        'model/bcache.cc',
        'model/mipv6-ha.cc',
        'model/mipv6-cn.cc',
        'helper/mipv6-helper.cc',
        ]

    module_test = bld.create_ns3_module_test_library('mipv6')
    module_test.source = [
        'test/mip-test.cc',
        'test/mip-handoff-test.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'mipv6'
    headers.source = [
        'model/mipv6-option-header.h',
        'model/mipv6-demux.h',
        'model/mipv6-option-demux.h',
        'model/mipv6-mobility.h',
        'model/mipv6-option.h',
        'model/mipv6-header.h',
        'model/mipv6-agent.h',
        'model/mipv6-l4-protocol.h',
        'model/tunnel-net-device.h',
        'model/mipv6-tun-l4-protocol.h',
        'model/blist.h',
        'model/mipv6-mn.h',
        'model/bcache.h',
        'model/mipv6-ha.h',
        'model/mipv6-cn.h',
        'helper/mipv6-helper.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()

